{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\el-descuevee-app\\\\components\\\\InfoScreen.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Accordian from \"../components/Accordian\";\n\nvar InfoScreen = function (_Component) {\n  _inherits(InfoScreen, _Component);\n\n  var _super = _createSuper(InfoScreen);\n\n  function InfoScreen(props) {\n    var _this;\n\n    _classCallCheck(this, InfoScreen);\n\n    _this = _super.call(this, props);\n\n    _this.renderAccordians = function () {\n      var items = [];\n\n      for (var _iterator = _createForOfIteratorHelperLoose(_this.state.menu), _step; !(_step = _iterator()).done;) {\n        item = _step.value;\n        items.push(React.createElement(Accordian, {\n          title: item.title,\n          data: item.data,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }\n        }));\n      }\n\n      return items;\n    };\n\n    _this.state = {\n      menu: [{\n        title: 'Non Veg Biryanis',\n        data: 'Biryani also known as biriyani, biriani, birani or briyani, is a mixed rice dish with its origins among the Muslims of the Indian subcontinent. This dish is especially popular throughout the Indian subcontinent, as well as among the diaspora from the region. It is also prepared in other regions such as Iraqi Kurdistan.'\n      }, {\n        title: 'Pizzas',\n        data: 'Pizza is a savory dish of Italian origin, consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and various other ingredients (anchovies, olives, meat, etc.) baked at a high temperature, traditionally in a wood-fired oven. In formal settings, like a restaurant, pizza is eaten with knife and fork, but in casual settings it is cut into wedges to be eaten while held in the hand. Small pizzas are sometimes called pizzettas.'\n      }, {\n        title: 'Drinks',\n        data: 'A drink (or beverage) is a liquid intended for human consumption. In addition to their basic function of satisfying thirst, drinks play important roles in human culture. Common types of drinks include plain drinking water, milk, coffee, tea, hot chocolate, juice and soft drinks. In addition, alcoholic drinks such as wine, beer, and liquor, which contain the drug ethanol, have been part of human culture for more than 8,000 years.'\n      }, {\n        title: 'Deserts',\n        data: 'A dessert is typically the sweet course that concludes a meal in the culture of many countries, particularly Western culture. The course usually consists of sweet foods, but may include other items. The word \"dessert\" originated from the French word desservir \"to clear the table\" and the negative of the Latin word servire'\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(InfoScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }\n      }, this.renderAccordians());\n    }\n  }]);\n\n  return InfoScreen;\n}(Component);\n\nexport { InfoScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 100,\n    backgroundColor: Colors.PRIMARY\n  }\n});","map":{"version":3,"sources":["C:/xampp/htdocs/el-descuevee-app/components/InfoScreen.js"],"names":["React","Component","Accordian","InfoScreen","props","renderAccordians","items","state","menu","item","push","title","data","styles","container","StyleSheet","create","flex","paddingTop","backgroundColor","Colors","PRIMARY"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,OAAOC,SAAP;;IAIqBC,U;;;;;AAEpB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAChB,8BAAMA,KAAN;;AADgB,UAkClBC,gBAlCkB,GAkCD,YAAK;AACpB,UAAMC,KAAK,GAAG,EAAd;;AACA,2DAAa,MAAKC,KAAL,CAAWC,IAAxB,wCAA8B;AAAzBC,QAAAA,IAAyB;AAC1BH,QAAAA,KAAK,CAACI,IAAN,CACI,oBAAC,SAAD;AACI,UAAA,KAAK,EAAID,IAAI,CAACE,KADlB;AAEI,UAAA,IAAI,EAAIF,IAAI,CAACG,IAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;AACD,aAAON,KAAP;AACH,KA7CmB;;AAEhB,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,CACJ;AACEG,QAAAA,KAAK,EAAE,kBADT;AAEEC,QAAAA,IAAI,EAAE;AAFR,OADI,EAKJ;AACED,QAAAA,KAAK,EAAE,QADT;AAEEC,QAAAA,IAAI,EAAE;AAFR,OALI,EASJ;AACCD,QAAAA,KAAK,EAAE,QADR;AAECC,QAAAA,IAAI,EAAE;AAFP,OATI,EAaJ;AACED,QAAAA,KAAK,EAAE,SADT;AAEEC,QAAAA,IAAI,EAAE;AAFR,OAbI;AADK,KAAb;AAFgB;AAsBjB;;;;WAID,kBAAS;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKT,gBAAL,EADJ,CADF;AAKD;;;;EAlCqCJ,S;;SAAnBE,U;AAkDrB,IAAMU,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACVG,IAAAA,IAAI,EAAC,CADK;AAEVC,IAAAA,UAAU,EAAC,GAFD;AAGVC,IAAAA,eAAe,EAACC,MAAM,CAACC;AAHb;AADoB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { StyleSheet,Text,View} from 'react-native';\nimport Accordian from '../components/Accordian';\n\n\n\nexport default class InfoScreen extends Component {\n\n constructor(props) {\n    super(props);\n    this.state = {\n      menu :[\n        { \n          title: 'Non Veg Biryanis', \n          data: 'Biryani also known as biriyani, biriani, birani or briyani, is a mixed rice dish with its origins among the Muslims of the Indian subcontinent. This dish is especially popular throughout the Indian subcontinent, as well as among the diaspora from the region. It is also prepared in other regions such as Iraqi Kurdistan.',\n        },\n        { \n          title: 'Pizzas',\n          data: 'Pizza is a savory dish of Italian origin, consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and various other ingredients (anchovies, olives, meat, etc.) baked at a high temperature, traditionally in a wood-fired oven. In formal settings, like a restaurant, pizza is eaten with knife and fork, but in casual settings it is cut into wedges to be eaten while held in the hand. Small pizzas are sometimes called pizzettas.'\n        },\n        { \n         title: 'Drinks',\n         data: 'A drink (or beverage) is a liquid intended for human consumption. In addition to their basic function of satisfying thirst, drinks play important roles in human culture. Common types of drinks include plain drinking water, milk, coffee, tea, hot chocolate, juice and soft drinks. In addition, alcoholic drinks such as wine, beer, and liquor, which contain the drug ethanol, have been part of human culture for more than 8,000 years.'\n        },\n        { \n          title: 'Deserts',\n          data: 'A dessert is typically the sweet course that concludes a meal in the culture of many countries, particularly Western culture. The course usually consists of sweet foods, but may include other items. The word \"dessert\" originated from the French word desservir \"to clear the table\" and the negative of the Latin word servire'\n        },\n      ]\n     }\n  }\n\n\n  \n  render() {\n    return (\n      <View style={styles.container}>\n        { this.renderAccordians() }\n      </View>\n    );\n  }\n\n  renderAccordians=()=> {\n    const items = [];\n    for (item of this.state.menu) {\n        items.push(\n            <Accordian \n                title = {item.title}\n                data = {item.data}\n            />\n        );\n    }\n    return items;\n}\n}\n\nconst styles = StyleSheet.create({\n  container: {\n   flex:1,\n   paddingTop:100,\n   backgroundColor:Colors.PRIMARY,\n   \n  }\n});"]},"metadata":{},"sourceType":"module"}