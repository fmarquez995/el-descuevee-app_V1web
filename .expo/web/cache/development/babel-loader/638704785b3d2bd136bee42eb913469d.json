{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\el-descuevee-app\\\\components\\\\InfoScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Accordion from 'react-native-collapsible/Accordion';\nvar SECTIONS = [{\n  title: 'First',\n  content: 'Lorem ipsum...'\n}, {\n  title: 'Second',\n  content: 'Lorem ipsum...'\n}];\n\nvar AccordionView = function (_Component) {\n  _inherits(AccordionView, _Component);\n\n  var _super = _createSuper(AccordionView);\n\n  function AccordionView() {\n    var _this;\n\n    _classCallCheck(this, AccordionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      activeSections: []\n    };\n\n    _this._renderSectionTitle = function (section) {\n      return React.createElement(View, {\n        style: styles.content,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, section.content));\n    };\n\n    _this._renderHeader = function (section) {\n      return React.createElement(View, {\n        style: styles.header,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.headerText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, section.title));\n    };\n\n    _this._renderContent = function (section) {\n      return React.createElement(View, {\n        style: styles.content,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, section.content));\n    };\n\n    _this._updateSections = function (activeSections) {\n      _this.setState({\n        activeSections: activeSections\n      });\n    };\n\n    return _this;\n  }\n\n  return AccordionView;\n}(Component);\n\nvar InfoScreen = function (_Component2) {\n  _inherits(InfoScreen, _Component2);\n\n  var _super2 = _createSuper(InfoScreen);\n\n  function InfoScreen() {\n    _classCallCheck(this, InfoScreen);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(InfoScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, \"Info Screen\"), React.createElement(Accordion, {\n        sections: SECTIONS,\n        activeSections: this.activeSections,\n        renderSectionTitle: this._renderSectionTitle,\n        renderHeader: this._renderHeader,\n        renderContent: this._renderContent,\n        onChange: this._updateSections,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return InfoScreen;\n}(Component);\n\nexport { InfoScreen as default };","map":{"version":3,"sources":["C:/xampp/htdocs/el-descuevee-app/components/InfoScreen.js"],"names":["React","Component","Accordion","SECTIONS","title","content","AccordionView","state","activeSections","_renderSectionTitle","section","styles","_renderHeader","header","headerText","_renderContent","_updateSections","setState","InfoScreen"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AAEA,IAAMC,QAAQ,GAAG,CACf;AACEC,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,OAAO,EAAE;AAFX,CADe,EAKf;AACED,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,OAAO,EAAE;AAFX,CALe,CAAjB;;IAWMC,a;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,cAAc,EAAE;AADV,K;;UAIRC,mB,GAAsB,UAAAC,OAAO,EAAI;AAC/B,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACN,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOK,OAAO,CAACL,OAAf,CADF,CADF;AAKD,K;;UAEDO,a,GAAgB,UAAAF,OAAO,EAAI;AACzB,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACE,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCJ,OAAO,CAACN,KAAzC,CADF,CADF;AAKD,K;;UAEDW,c,GAAiB,UAAAL,OAAO,EAAI;AAC1B,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACN,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOK,OAAO,CAACL,OAAf,CADF,CADF;AAKD,K;;UAEDW,e,GAAkB,UAAAR,cAAc,EAAI;AAClC,YAAKS,QAAL,CAAc;AAAET,QAAAA,cAAc,EAAdA;AAAF,OAAd;AACD,K;;;;;;EA/ByBP,S;;IAkCPiB,U;;;;;;;;;;;;;WAGjB,kBAAS;AACT,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,SAAD;AACA,QAAA,QAAQ,EAAEf,QADV;AAEA,QAAA,cAAc,EAAE,KAAKK,cAFrB;AAGA,QAAA,kBAAkB,EAAE,KAAKC,mBAHzB;AAIA,QAAA,YAAY,EAAE,KAAKG,aAJnB;AAKA,QAAA,aAAa,EAAE,KAAKG,cALpB;AAMA,QAAA,QAAQ,EAAE,KAAKC,eANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAcD;;;;EAlBqCf,S;;SAAnBiB,U","sourcesContent":["import React, { Component } from 'react'\nimport { StyleSheet,Text,View} from 'react-native';\nimport Accordion from 'react-native-collapsible/Accordion';\n\nconst SECTIONS = [\n  {\n    title: 'First',\n    content: 'Lorem ipsum...',\n  },\n  {\n    title: 'Second',\n    content: 'Lorem ipsum...',\n  },\n];\n\nclass AccordionView extends Component {\n  state = {\n    activeSections: [],\n  };\n\n  _renderSectionTitle = section => {\n    return (\n      <View style={styles.content}>\n        <Text>{section.content}</Text>\n      </View>\n    );\n  };\n\n  _renderHeader = section => {\n    return (\n      <View style={styles.header}>\n        <Text style={styles.headerText}>{section.title}</Text>\n      </View>\n    );\n  };\n\n  _renderContent = section => {\n    return (\n      <View style={styles.content}>\n        <Text>{section.content}</Text>\n      </View>\n    );\n  };\n\n  _updateSections = activeSections => {\n    this.setState({ activeSections });\n  };\n}\n\nexport default class InfoScreen extends Component {\n\n\n    render() {\n    return (\n      <View >\n        <Text>Info Screen</Text>\n        <Accordion\n        sections={SECTIONS}\n        activeSections={this.activeSections}\n        renderSectionTitle={this._renderSectionTitle}\n        renderHeader={this._renderHeader}\n        renderContent={this._renderContent}\n        onChange={this._updateSections}\n      />\n      </View>\n      \n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}