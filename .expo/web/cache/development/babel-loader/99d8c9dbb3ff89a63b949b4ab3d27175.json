{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\el-descuevee-app\\\\components\\\\InfoScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Accordian from \"../components/Accordian\";\nimport Accordion from 'react-native-collapsible/Accordion';\n\n(function () {\n  return React.createElement(Accordion, {\n    activeSections: [0],\n    sections: ['Section 1', 'Section 2', 'Section 3'],\n    renderSectionTitle: _this._renderSectionTitle,\n    renderHeader: _this._renderHeader,\n    renderContent: _this._renderContent,\n    onChange: _this._updateSections,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 3\n    }\n  });\n});\n\nimport Collapsible from 'react-native-collapsible';\n\n(function () {\n  return React.createElement(Collapsible, {\n    collapsed: isCollapsed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 3\n    }\n  }, React.createElement(SomeCollapsedView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }));\n});\n\nvar SECTIONS = [{\n  title: 'First',\n  content: 'Lorem ipsum...'\n}, {\n  title: 'Second',\n  content: 'Lorem ipsum...'\n}];\n\nvar AccordionView = function (_Component) {\n  _inherits(AccordionView, _Component);\n\n  var _super = _createSuper(AccordionView);\n\n  function AccordionView() {\n    var _this2;\n\n    _classCallCheck(this, AccordionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.state = {\n      activeSections: []\n    };\n\n    _this2._renderSectionTitle = function (section) {\n      return React.createElement(View, {\n        style: styles.content,\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, section.content));\n    };\n\n    _this2._renderHeader = function (section) {\n      return React.createElement(View, {\n        style: styles.header,\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.headerText,\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, section.title));\n    };\n\n    _this2._renderContent = function (section) {\n      return React.createElement(View, {\n        style: styles.content,\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, section.content));\n    };\n\n    _this2._updateSections = function (activeSections) {\n      _this2.setState({\n        activeSections: activeSections\n      });\n    };\n\n    return _this2;\n  }\n\n  return AccordionView;\n}(Component);\n\nvar InfoScreen = function (_Component2) {\n  _inherits(InfoScreen, _Component2);\n\n  var _super2 = _createSuper(InfoScreen);\n\n  function InfoScreen() {\n    _classCallCheck(this, InfoScreen);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(InfoScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Accordion, {\n        sections: SECTIONS,\n        activeSections: this.state.activeSections,\n        renderSectionTitle: this._renderSectionTitle,\n        renderHeader: this._renderHeader,\n        renderContent: this._renderContent,\n        onChange: this._updateSections,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 8\n        }\n      });\n    }\n  }]);\n\n  return InfoScreen;\n}(Component);\n\nexport { InfoScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 100\n  }\n});","map":{"version":3,"sources":["C:/xampp/htdocs/el-descuevee-app/components/InfoScreen.js"],"names":["React","Component","Accordian","Accordion","_renderSectionTitle","_renderHeader","_renderContent","_updateSections","Collapsible","isCollapsed","SECTIONS","title","content","AccordionView","state","activeSections","section","styles","header","headerText","setState","InfoScreen","StyleSheet","create","container","flex","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { StyleSheet,Text,View} from 'react-native';\nimport Accordian from '../components/Accordian';\nimport Accordion from 'react-native-collapsible/Accordion';\n\n() => (\n  <Accordion\n    activeSections={[0]}\n    sections={['Section 1', 'Section 2', 'Section 3']}\n    renderSectionTitle={this._renderSectionTitle}\n    renderHeader={this._renderHeader}\n    renderContent={this._renderContent}\n    onChange={this._updateSections}\n  />\n);\n\n\nimport Collapsible from 'react-native-collapsible';\n\n() => (\n  <Collapsible collapsed={isCollapsed}>\n    <SomeCollapsedView />\n  </Collapsible>\n);\n\n\n\nconst SECTIONS = [\n  {\n    title: 'First',\n    content: 'Lorem ipsum...',\n  },\n  {\n    title: 'Second',\n    content: 'Lorem ipsum...',\n  },\n];\n\nclass AccordionView extends Component {\n  state = {\n    activeSections: [],\n  };\n\n  _renderSectionTitle = section => {\n    return (\n      <View style={styles.content}>\n        <Text>{section.content}</Text>\n      </View>\n    );\n  };\n\n  _renderHeader = section => {\n    return (\n      <View style={styles.header}>\n        <Text style={styles.headerText}>{section.title}</Text>\n      </View>\n    );\n  };\n\n  _renderContent = section => {\n    return (\n      <View style={styles.content}>\n        <Text>{section.content}</Text>\n      </View>\n    );\n  };\n\n  _updateSections = activeSections => {\n    this.setState({ activeSections });\n  };\n}\n\nexport default class InfoScreen extends Component {\n\n   render() {\n     \n    return (\n      \n\n       <Accordion\n        sections={SECTIONS}\n        activeSections={this.state.activeSections}\n        renderSectionTitle={this._renderSectionTitle}\n        renderHeader={this._renderHeader}\n        renderContent={this._renderContent}\n        onChange={this._updateSections}\n      />\n\n\n    )\n  }\n\n}\n\nconst styles = StyleSheet.create({\n  container: {\n   flex:1,\n   paddingTop:100,\n   //backgroundColor:Colors.PRIMARY,\n   \n  }\n});"]},"metadata":{},"sourceType":"module"}